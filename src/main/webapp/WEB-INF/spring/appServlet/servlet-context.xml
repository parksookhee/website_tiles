<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/**" location="/resources/" />

	<!-- Resolver 0 -->
	<beans:bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<beans:property name="order" value="0" />
		<beans:property name="mediaTypes">
			<beans:map>
				<beans:entry key="json" value="application/json" />
				<beans:entry key="jsonp" value="application/javascript" />
				<beans:entry key="xml" value="application/xml" />
			</beans:map>
		</beans:property>

		<beans:property name="viewResolvers">
			<beans:list>
				<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
				<beans:bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
					<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView" />
				</beans:bean>
			</beans:list>
		</beans:property>

		<beans:property name="ignoreAcceptHeader" value="true" />
	</beans:bean>

	<!-- Resolver 1st -->
	<beans:bean id="bnViewResolver"
		class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="1" />
	</beans:bean>

	<!-- Resolver 2nd -->
	<beans:bean id="tilesViewResolver" class="org.springbyexample.web.servlet.view.tiles2.TilesUrlBasedViewResolver">
		<beans:property name="viewClass" value="org.springbyexample.web.servlet.view.tiles2.DynamicTilesView" />
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="tilesDefinitionName" value="default" />
		<beans:property name="tilesBodyAttributeName" value="body" />
		<beans:property name="tilesDefinitionDelimiter" value="." />
		<beans:property name="order" value="2" />
	</beans:bean>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="3" />
	</beans:bean>

	<!-- Tiles 환경설정 파일 -->
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>classpath:tiles/tiles-def.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<interceptors>
		<interceptor>
			<mapping path="/*" />
			<beans:bean class="com.site.commons.lib.interceptor.RequestInterceptor"></beans:bean>
		</interceptor>
	</interceptors>

	<context:component-scan base-package="com.site" />
	
</beans:beans>
